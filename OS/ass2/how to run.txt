cd ~/Downloads/ass2
gcc pipe.c -o pipe
./pipe
cat output.txt





Step-by-Step Process in Simple Terms:

    Create a Pipe:

        A pipe is created to let the parent and child processes talk to each other.

        Imagine a pipe like a tunnel where data can be passed through from one end (parent) to the other end (child).

    Fork the Process:

        The program forks (splits) into two parts: a parent process and a child process.

        The parent sends a message through the pipe to the child, and the child reads it.

    Parent Process (Sends a Message):

        The parent process writes the message "Hello from Parent!" and sends it into the pipe.

        After sending the message, it waits for the child to finish.

    Child Process (Reads the Message and Writes to a File):

        The child process reads the message from the pipe.

        It writes what it reads into a file called output.txt.

    Child Finishes, Parent Waits:

        After the child has finished writing the message to the file, the parent process waits for the child to complete.

        Once the child is done, the program ends.
